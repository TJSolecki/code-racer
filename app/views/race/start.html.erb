<section id="prompt-container">
<section class="prompt">
  <div id="stats-bar">
    <p id="time-elapsed">0:30</p>
    <div id="accuracy-and-wpm-wrapper">
      <p id="accuracy">95%</p>
      <p id="wpm">80wpm</p>
    </div>
  </div>
  <pre>
  <div class="feedback-container">
  </div>
  <code class="language-python">
  <%= @prompt %>
  </code>
  </pre>
  <input type="text" id="input" autofocus=true>
</section>
</section>
<script async defer>
  function spanFactory(id) {
    const span = document.createElement("span");
    span.id = id;
    return span;
  }
  function codeFactory(contents) {
    const code = document.createElement("code");
    code.textContent = contents;
    code.classList.add("language-python");
    return code;
  }

  function flashColor(element, color) {
      console.log('flashing green');
      element.style.backgroundColor = color;
      setTimeout(() => element.style.backgroundColor = 'white', 200);
  }

  const sections = <%= @sections.to_json.html_safe %>;
  const whitespace_array = <%= @whitespace_array.to_json.html_safe %>
  const numWords = sections.length;
  let wordsTyped = 0;
  let totalCharactersTyped = 0;
  let correctCharactersTyped = 0;
  let lineNumber = 0;

  const textInput = document.querySelector('#input');
  const feedbackContainer = document.querySelector(".feedback-container");
  const lineSpan = spanFactory("line-span");
  const correctCode = codeFactory("");
  lineSpan.appendChild(correctCode);
  feedbackContainer.appendChild(lineSpan);
  const currCodeElement = codeFactory("");
  lineSpan.appendChild(currCodeElement);

  const startTime = new Date();
  const wpmInterval = setInterval( () => {
      const endTime = new Date();
      const elapsedTimeInMilliseconds = endTime - startTime;
      const elapsedTimeInSeconds = elapsedTimeInMilliseconds / 1000;
      const elapsedTimeInMinutes = elapsedTimeInSeconds / 60;
      const wpm = (correctCharactersTyped/5)/elapsedTimeInMinutes;
  }, 200);

  function handleNewInput(event) {
      let content = event.target.value;

      // Check if the key pressed is a letter, number, symbol, space, or the enter key.
      const isLetterOrNumberOrSymbolOrSpaceKey = /[a-z0-9_,.!?\[\]\{\}\(\):@#$%\^&\*\\\/<>\| ]/.test(String(event.key)) && String(event.key).length === 1;

      // If the key pressed is a letter, number, symbol, space, or the enter key, increment the totalCharactersTyped variable.
      if (isLetterOrNumberOrSymbolOrSpaceKey) {
          totalCharactersTyped++;
          console.log(event.key);
      }

      if (event.key === 'Enter') {
          totalCharactersTyped++;
          event.preventDefault(); // Disable the default Enter key behavior
          content += '\n'; // Append a newline character
      }

      const currWord = sections[wordsTyped];
      if (currWord.indexOf(content) === 0) {
          correctCharactersTyped++;
          currCodeElement.textContent = content;
          currCodeElement.style.color = "green";
      }
      else {
          currCodeElement.style.color = "red";
          flashColor(textInput, "red");
      }

      if (content == currWord) {
          // add new word to correctCode
          correctCode.textContent += currWord;
          currCodeElement.textContent = "";
          
          if (currWord[currWord.length - 1] === "\n") {
            lineNumber++;
            correctCode.textContent += whitespace_array[lineNumber];
          }
          wordsTyped++;
          textInput.value = "";
          flashColor(textInput, "green");
          if(wordsTyped === numWords) {
              alert("you finished");
          }
          return;
      }
  }


  textInput.addEventListener('keyup', handleNewInput, event);

</script>
